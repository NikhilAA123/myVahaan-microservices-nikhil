# No version tag needed for modern Docker Compose
services:
  # --- INFRASTRUCTURE SERVICES ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    # --- THIS IS THE FIX ---
    # This healthcheck waits until the Kafka broker is fully ready.
    healthcheck:
      test: ["CMD", "cub", "kafka-ready", "-b", "kafka:29092", "1", "20"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: myvahan
      POSTGRES_PASSWORD: password
      POSTGRES_DB: myvahan_db
    ports:
      - "5432:5432"
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myvahan -d myvahan_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- APPLICATION SERVICES ---
  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      auth-service:
        condition: service_started # Gateway can start once auth-service starts
      ride-service:
        condition: service_started

  auth-service:
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    # --- THIS IS THE FIX ---
    # This now waits for both Kafka and Postgres to be 'healthy', not just started.
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - KAFKA_BROKER=kafka:29092
      - DATABASE_URL=postgresql://myvahan:password@postgres:5432/myvahan_db
      - JWT_SECRET=supersecretkey

  ride-service:
    build:
      context: .
      dockerfile: services/ride-service/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - KAFKA_BROKER=kafka:29092
      - DATABASE_URL=postgresql://myvahan:password@postgres:5432/myvahan_db

  matching-service:
    build:
      context: .
      dockerfile: services/matching-service/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - KAFKA_BROKER=kafka:29092
      - DATABASE_URL=postgresql://myvahan:password@postgres:5432/myvahan_db

volumes:
  pgdata:
